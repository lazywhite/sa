
## Workflow
1. centralized workflow
2. integration-manager workflow
3. Diactor and  Lieutenants Workflow

git repack -a -d (直接删除)
git repack -A -d (不直接删除)

git config push.default=simple

stash: store all information of work dir  and stage, checkout from HEAD
git stash [save <name>]
git stash apply [default stash:{0}] 
git merge --no-ff (no fast-forward)
git pull --no-ff (no fast-forward)



git blame: Show what revision and author last modified each line of a file
git show :Show various types of objects
git revert:Undo commit but All commits have been pushed 

git submodule add url


git bisect start
git bisect good
git bisect bad
git bisect visualize


git cat-file -t 532c : commit
git cat-file commit 532c : tree, author, committer
git ls-tree tree-hash
git cat-file -t blob-hash : blob
git cat-file blob  blob-hash


git fetch origin;;git branch -[a|r|v]

git tag 'name' 
git tag -l (list)
git tag -v 'name' (information)

git rebase -i
git rebase 'branch' on 'master'



git push origin --tags
git push origin v1.5

git push origin local_branch:remote_branch
git push origin :serverfix   删除远程分支
git checkout --track origin/serverfix


git request-pull
git cherry-pick -x


git log master..featureA
git log master...featureA


git log origin/master..HEAD  : what will be pushed to remote

git filter-branch --tree-filter 'rm -f password.txt' HEAD : only on current br
[--all on all branches]


git filter-branch --tree-filter "find * -type f -name '*~' -delete" HEAD


git blame -L 12,22 sample.rb


git read-tree


git checkout <commit-id>
