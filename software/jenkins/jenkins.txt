# installation
curl -o jenkins.war http://mirrors.jenkins-ci.org/war/latest/jenkins.war
# run
java -jar jenkins.war > jenkins.log &
# configure
plugin website: https://wiki.jenkins-ci.org/display/JENKINS/Plugins
usefull plugin: git-client git gitlab

# how to work with gitlab
generate a paire of keys to deploy, Deploy keys allow read-only access to the repository
jenkins create a item managed by git and  private key for deploy as credentials
webhook of push event of gitlab repo is
http://jenkins_server:port/gitlab/build_now


# check jenkins version 
unzip -c jenkins.war   META-INF/MANIFEST.MF|grep 'Jenkins-Version'



## smtp 
501 mail from address must be same as authorization user

```
以下两项应该一样
Jenkins Location
    system admin email address: noreply@xxx.com

SMTP
    user: noreply@xxx.com    
```

gitlab webhook format for "Gitlab Plugin"
    http://jenkins:port/project/<Jenkins Project Name>

## new install procedure 
1. download jenkins-2.8.war
2. java -jar jenkins-2.8.war --httpPort=5000 > /var/log/jenkins.log 2>&1
3. http://jenkins:port/  <enter admin password produced in jenkins.log, start install>
4. download needed plugins in '.hpi' format
5. System Config --> Advanced --> Upload and install plugin 
6. restart jenkins to ensure plugin has loaded
7. create jobs

8. Gitlab connections:   System-config -> Gitlab
                            Connection Name: <Gitlab>
                            Gitlab host URL: http://gitlab.test.com
                            API Token: <api-token of jenkins user>
                            Ignore SSL Certificate Errors
job
    Jenkins Project Name
    Gitlab Connection: <Gitlab>
    Source code Management
        git
            Repositories
                repo_url:  http://gitlab.test.com/white/maven_test.git
                credentials:
                    kind: Username with password
                advanced: name --> origin
            
    Build Trigger
        check "build when a change is pushed to gitlab    
    Build
        Root POM: pom.xml
        Maven OPTS
    Email notification

    Build
        Execute shell
            默认在clone下的repo的顶层执行
            容器方式运行jenkins, 则目录都在容器内
    
## 添加maven tool
System Config --> Global Tool Configuration --> Maven
    add maven --> MAVEN_HOME=/usr/share/maven



## disable security
https://wiki.jenkins-ci.org/display/JENKINS/Disable+security
